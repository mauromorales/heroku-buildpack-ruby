#!/usr/bin/env bash

# Downloads a bootstrap copy of Ruby for execution of the buildpack
# this is needed so we can totally control the Ruby version and are
# not dependant on the Ruby version of the stack image

# fail hard
set -o pipefail
# fail harder
set -eu

BIN_DIR=$1
RUBY_BOOTSTRAP_DIR=$2

curl_retry_on_18() {
  local ec=18;
  local attempts=0;
  while (( ec == 18 && attempts++ < 3 )); do
    curl "$@" # -C - would return code 33 if unsupported by server
    ec=$?
  done
  return $ec
}

set -x
patch=0
# Pull ruby version out of buildpack.toml to be used with bootstrapping
regex=".*ruby_version = [\'\"]([0-9]+\.[0-9]+\.[0-9]+)[\'\"].*"
if [[ $(cat "$BIN_DIR/../buildpack.toml") =~ $regex ]]
  then
    if [[ "${BASH_REMATCH[1]}" == "2.6.6" ]]
    then
			echo Detected patchable version Ruby 2.6.6
      patch=1
      heroku_buildpack_ruby_url="https://cache.ruby-lang.org/pub/ruby/2.6/ruby-2.6.6.tar.gz"
    else
      heroku_buildpack_ruby_url="https://s3-external-1.amazonaws.com/heroku-buildpack-ruby/$STACK/ruby-${BASH_REMATCH[1]}.tgz"
    fi
  else
    echo "Could not detect ruby version to bootstrap"
    exit 1
fi

mkdir -p "$RUBY_BOOTSTRAP_DIR"

if [[ "${patch}" == "1" ]]
then
  mkdir -p "/tmp/src"
	echo Downloading Ruby 2.6.6 from source
  curl_retry_on_18 --fail --silent --location -o /tmp/ruby-2.6.6.tar.gz "$heroku_buildpack_ruby_url" || {
  echo Failed to download Ruby sources
    exit 1
  }

	echo Extracting sources to tmp
  tar xzf /tmp/ruby-2.6.6.tar.gz -C /tmp/src
  cd /tmp/src/ruby-2.6.6
	echo Apply patch
	patch < "$BIN_DIR/support/onigmo-fix.diff"
	ls
	echo Running autoconf, configure, make and make install
  autoconf
  ./configure --disable-install-doc --prefix "$RUBY_BOOTSTRAP_DIR" --enable-load-relative --enable-shared
	make
	make install
else
  curl_retry_on_18 --fail --silent --location -o "$RUBY_BOOTSTRAP_DIR/ruby.tgz" "$heroku_buildpack_ruby_url" || {
  cat<<EOF
    Failed to download a Ruby executable for bootstrapping!

    This is most likely a temporary internal error. If the problem
    persists, make sure that you are not running a custom or forked
    version of the Heroku Ruby buildpack which may need updating.
EOF
    exit 1
  }

  tar xzf "$RUBY_BOOTSTRAP_DIR/ruby.tgz" -C "$RUBY_BOOTSTRAP_DIR"
fi
set +x
